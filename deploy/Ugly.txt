<!DOCTYPE html>
<html>
<head>
    <title>allowed_values_audit-1.0.0</title>
    <!--  (c) 2017 CA Technologies.  All Rights Reserved. -->
    <!--  Build Date: Wed Nov 28 2018 00:08:28 GMT+0000 (UTC) -->

    <script type="text/javascript">
        var APP_BUILD_DATE = "Wed Nov 28 2018 00:08:28 GMT+0000 (UTC)";
        var CHECKSUM = 1945998095;
    </script>

    <script type="text/javascript" src="/apps/2.1/sdk.js"></script>
    <!-- our highcharts (needed so that we can add patterns)
    <script type="text/javascript" src="/apps/2.1/lib/analytics/analytics-all.js"></script>
    -->


    <script type="text/javascript">
        Rally.onReady(function() {
            Ext.override(Rally.ui.gridboard.SharedViewComboBox,{_isViewPreference:function(a){return"preference"===a.self.typePath&&"View"===a.get("Type")&&a.get("AppId")==this.getContext().getAppId()},getSharedViewParam:function(){var a=parent.location.hash,b=a.match(/sharedViewId=(\d+)/);return b&&b[1]},_ensureLatestView:function(a){if(a.objectId&&a.versionId){var b=Ext.create("Deft.Deferred");this.store.model.load(a.objectId,{fetch:["VersionId","Value"],success:function(a){b.resolve(a)}}),this.store.on("load",function(){b.promise.then({success:function(b){b&&b.get("VersionId")!==a.versionId&&this._applyView(this._decodeValue(b))},scope:this})},this,{single:!0})}}}),Ext.override(Rally.ui.gridboard.plugin.GridBoardFieldPicker,{gridFieldBlackList:["Changesets","Children","ObjectID","Predecessors","RevisionHistory","Subscription","Successors","TaskIndex","Workspace","VersionId"]}),Ext.override(Rally.ui.inlinefilter.PropertyFieldComboBox,{defaultWhiteListFields:["Milestones","Tags"]}),Ext.define("allowed_values_audit",{extend:"Rally.app.App",componentCls:"app",layout:{type:"vbox",align:"stretch"},items:[{xtype:"container",id:"labelArea",html:""},{id:"grid-area",xtype:"container",flex:1,type:"vbox",align:"stretch"}],config:{defaultSettings:{piType:void 0,auditFieldName:void 0}},integrationHeaders:{name:"allowed_values_audit"},launch:function(){if(this.selectedPiType=this.getSetting("piType"),this.auditFieldName=this.getSetting("auditFieldName"),!this.auditFieldName){var a=this.down("#labelArea");return void a.update('<span class="ts-page-label">No settings applied.  Select "Edit App Settings." from the gear menu.</span>')}var b=Ext.create("Deft.Deferred");this.selectedPiType?b.resolve():Rally.data.util.PortfolioItemHelper.getPortfolioItemTypes().then({scope:this,success:function(a){this.selectedPiType=a[0].get("TypePath"),this.updateSettingsValues({settings:{piType:this.selectedPiType}}),b.resolve()}}),b.promise.then({scope:this,success:this.getAllowedValueFilters}).then({scope:this,success:function(a){return this.allowedValueFilter=a,this._buildStore()}})},setTypeAndFieldLabel:function(){var a=this.down("#labelArea");a.update('<span class="ts-page-label">'+this.selectedPiType+" with an invalid "+this.auditFieldName+" value.</span>")},getAllowedValueFilters:function(){return Rally.data.ModelFactory.getModel({type:this.selectedPiType}).then({scope:this,success:function(a){var b=a.getField(this.auditFieldName),c=b.getAllowedValueStore();return c.load()}}).then({scope:this,success:function(a){var b=_.map(a,function(a){return console.log(a.get("StringValue")),{property:this.auditFieldName,operator:"!=",value:a.get("StringValue")}},this);return Rally.data.wsapi.Filter.and(b)}})},onResize:function(){this.callParent(arguments);var a=this.down("#grid-area"),b=this.down("rallygridboard");a&&b&&b.setHeight(a.getHeight())},_buildStore:function(){this.modelNames=[this.selectedPiType];var a=["FormattedID","Name"],b=this.getContext().getDataContext();Ext.create("Rally.data.wsapi.TreeStoreBuilder").build({models:this.modelNames,enableHierarchy:!0,remoteSort:!0,fetch:a,context:b,enablePostGet:!0,enableRootLevelPostGet:!0}).then({success:this._addGridboard,scope:this})},_addGridboard:function(a){var b=this.down("#grid-area");b.removeAll();var c=this.modelNames[0],d=this.getContext(),e=d.getDataContext();this.gridboard=b.add({xtype:"rallygridboard",context:d,modelNames:this.modelNames,toggleState:"grid",height:b.getHeight(),listeners:{scope:this,viewchange:this.viewChange},plugins:[{ptype:"rallygridboardinlinefiltercontrol",inlineFilterButtonConfig:{stateful:!0,stateId:this.getModelScopedStateId(c,"filters"),modelNames:this.modelNames,inlineFilterPanelConfig:{quickFilterPanelConfig:{whiteListFields:["Tags","Milestones"]}}}},{ptype:"rallygridboardfieldpicker",headerPosition:"left",modelNames:this.modelNames,stateful:!0,stateId:this.getModelScopedStateId(c,"fields")},{ptype:"rallygridboardsharedviewcontrol",sharedViewConfig:{stateful:!0,stateId:this.getModelScopedStateId(c,"views"),stateEvents:["select","beforedestroy"]}}],gridConfig:{store:a,storeConfig:{context:e,filters:this.allowedValueFilter}}})},viewChange:function(){this._buildStore()},getModelScopedStateId:function(a,b){return this.getContext().getScopedStateId(a+"-"+b)},getHeight:function(){var a=this.getEl();if(a){var b=this.callParent(arguments);return Ext.isIE8?Math.max(b,600):b}return 0},setHeight:function(a){this.callParent(arguments),this.gridboard&&this.gridboard.setHeight(a)},getSettingsFields:function(){var a=this.getSetting("piType");return[{xtype:"rallyportfolioitemtypecombobox",name:"piType",value:a,fieldLabel:"Artifact Type",valueField:"TypePath",labelWidth:150,listeners:{scope:this,change:function(a,b,c){var d=Ext.ComponentManager.get("fieldPickerSettingsControl");d.refreshWithNewModelType(b)}}},{xtype:"rallyfieldcombobox",id:"fieldPickerSettingsControl",name:"auditFieldName",model:a,fieldLabel:"Field to Audit",labelWidth:150,allowNoEntry:!0}]},onSettingsUpdate:function(){}});

               Rally.launchApp('allowed_values_audit', {
                   name: 'allowed_values_audit'
               });
        });
    </script>

    <style type="text/css">

.app {
}
.tsinfolink {
    position:absolute;
    right:0px;
    width: 14px;
    height: 14px;
    border-radius: 7px;
    text-align: center;
    color: white;
    background: #C0C0C0;
    border-style: solid;
    border-width: 1px;
    margin-top: 25px;
    margin-right: 5px;
    cursor: pointer;
}

.ts-page-label {
    font-weight: bold;
    font-size: medium;
}
    </style>

</head>
<body></body>
</html>